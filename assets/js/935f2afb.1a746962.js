"use strict";(self.webpackChunkreact_component_shell_website=self.webpackChunkreact_component_shell_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/introduction","docId":"introduction"},{"type":"link","label":"createShellProvider()","href":"/docs/createShellProvider","docId":"createShellProvider"},{"type":"link","label":"Shell","href":"/docs/shell","docId":"shell"},{"type":"link","label":"shell property","href":"/docs/shell-prop","docId":"shell-prop"},{"type":"link","label":"customProviderWrapper","href":"/docs/customProviderWrapper","docId":"customProviderWrapper"}]},"docs":{"createShellProvider":{"id":"createShellProvider","title":"createShellProvider()","description":"createShellProvider is a function with the help of which we can create a react-context provider and hooks for a certain shell type.","sidebar":"tutorialSidebar"},"customProviderWrapper":{"id":"customProviderWrapper","title":"customProviderWrapper","description":"","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Description","sidebar":"tutorialSidebar"},"shell":{"id":"shell","title":"Shell","description":"The Shell is a base class that provides additional methods for state management.","sidebar":"tutorialSidebar"},"shell-prop":{"id":"shell-prop","title":"shell property","description":"Sometimes we need to access the shell object outside of react-components and control the shell from anywhere in our project. We can easily do this by passing the shell object to the Shell Provider via the shell property\u2024","sidebar":"tutorialSidebar"}}}')}}]);