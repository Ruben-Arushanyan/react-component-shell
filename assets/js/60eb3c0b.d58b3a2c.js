"use strict";(self.webpackChunkreact_component_shell_website=self.webpackChunkreact_component_shell_website||[]).push([[834],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),i=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=i(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=i(n),h=o,m=d["".concat(p,".").concat(h)]||d[h]||u[h]||a;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var i=2;i<a;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:4,title:"shell property"},l=void 0,s={unversionedId:"shell-prop",id:"shell-prop",title:"shell property",description:"Sometimes we need to access the shell object outside of react-components and control the shell from anywhere in our project. We can easily do this by passing the shell object to the Shell Provider via the shell property\u2024",source:"@site/docs/shell-prop.md",sourceDirName:".",slug:"/shell-prop",permalink:"/docs/shell-prop",draft:!1,editUrl:"https://github.com/Ruben-Arushanyan/react-component-shell/edit/master/website/docs/shell-prop.md",tags:[],version:"current",lastUpdatedBy:"Ruben Arushanyan",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"shell property"},sidebar:"tutorialSidebar",previous:{title:"Shell",permalink:"/docs/shell"},next:{title:"customProviderWrapper",permalink:"/docs/customProviderWrapper"}},p={},i=[{value:"Example",id:"example",level:2}],c={toc:i};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Sometimes we need to access the ",(0,o.kt)("strong",{parentName:"p"},"shell object")," outside of react-components and control the shell from anywhere in our project. We can easily do this by passing the ",(0,o.kt)("strong",{parentName:"p"},"shell object")," to the ",(0,o.kt)("strong",{parentName:"p"},"Shell Provider")," via the ",(0,o.kt)("inlineCode",{parentName:"p"},"shell")," property\u2024"),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Let's create a ",(0,o.kt)("inlineCode",{parentName:"p"},"Count")," shell, which stores the count ",(0,o.kt)("strong",{parentName:"p"},"state")," and has an ",(0,o.kt)("inlineCode",{parentName:"p"},"increment()")," method to add the count by one."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Count.js"',title:'"Count.js"'},"import { Shell } from 'react-component-shell'\n\nclass Count extends Shell {\n    state = {count: 0}\n\n    increment() {\n        this.updateState(state => {\n            return {count: state.count + 1}\n        })\n    }\n}\n\nexport {Count}\n")),(0,o.kt)("p",null,"Now let's use the ",(0,o.kt)("inlineCode",{parentName:"p"},"createShellProvider()")," function to create a react-context provider and access hooks for the Count shell."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="count-context.js"',title:'"count-context.js"'},"import { createShellProvider } from 'react-component-shell'\n\nconst [\n    CountProvider,\n    useCount,\n    useCountState,\n] = createShellProvider()\n\nexport {CountProvider, useCount, useCountState}\n")),(0,o.kt)("p",null,"As we noticed, we didn't pass any arguments to the ",(0,o.kt)("inlineCode",{parentName:"p"},"createShellProvider()")," function."),(0,o.kt)("p",null,"Now let's use ",(0,o.kt)("inlineCode",{parentName:"p"},"<CountProvider>")," with ",(0,o.kt)("strong",{parentName:"p"},"shell")," property."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.js"',title:'"App.js"'},"import {CountProvider, useCount, useCountState} from './count-context.js'\nimport {Count} from './Count.js'\n\n// highlight-start\nconst countShell = new Count()\nsetInterval(() => {\n    countShell.increment()\n}, 1000)\n// highlight-end\n\nconst App = (props) => {\n    return (\n        // highlight-next-line\n        <CountProvider shell={countShell}>\n            <CurrentCount />\n        </CountProvider>\n    )\n}\n\nconst CurrentCount = () => {\n    const count = useCountState(state => state.count)\n\n    return <div>{count}</div>\n}\n\nexport default App\n")),(0,o.kt)("p",null,"In the example above, we created a ",(0,o.kt)("inlineCode",{parentName:"p"},"countShell")," object and passed it to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<CountProvider>")," via the ",(0,o.kt)("strong",{parentName:"p"},"shell")," property. Outside of the ",(0,o.kt)("inlineCode",{parentName:"p"},"<App>")," component, we declared ",(0,o.kt)("inlineCode",{parentName:"p"},"setInterval()")," which increments the count every second."))}u.isMDXComponent=!0}}]);